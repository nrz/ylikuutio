Marching cubes algorithm
https://transvoxel.org/Lengyel-VoxelTerrain.pdf
http://www.cs.jhu.edu/~misha/ReadingSeminar/Papers/Chernyaev96.pdf

Marching tetrahedra algorithm

Elevation data of the Earth:
https://www2.jpl.nasa.gov/srtm/
http://wiki.openstreetmap.org/wiki/SRTM
http://e4ftl01.cr.usgs.gov/SRTM/SRTMGL3.003/

NASA Visible Earth
https://visibleearth.nasa.gov/

Vegetation data of the Earth (43200 x 86400 pixels):
http://landcover.usgs.gov/global_climatology.php

Global weather API:
http://openweathermap.org/

Elevation data of the Moon: LRO Lola Elevation Model 118m (LDEM GDR) (46080 x 92160 pixels):
http://astrogeology.usgs.gov/search/details/Moon/LRO/LOLA/Lunar_LRO_LOLA_Global_LDEM_118m_Mar2014/cub

Mars Global Data Sets:
http://www.mars.asu.edu/data/

Mars Global Data Sets - MOLA Shaded Relief (46080 x 23040 pixels):
http://www.mars.asu.edu/data/mola_color/

Texture Haven (all textures CC-0):
https://texturehaven.com/

Good free textures (free as beer and free as speech):
http://www.myfreetextures.com/

HGT file format:
http://gis.stackexchange.com/questions/43743/how-to-extract-elevation-from-hgt-file

Converting CUB file format eg. with `gdal_translate`:
http://planetarygis.blogspot.fi/2014/06/using-isis-23-image-cubes-in-gis.html

Converting DWG file format with TeighaConverter:
https://www.freecadweb.org/wiki/FreeCAD_and_DWG_Import
https://www.opendesign.com/guestfiles/teigha_file_converter
https://blender.stackexchange.com/questions/30788/how-do-i-import-a-dxf

OpenCTM file format:
http://openctm.sourceforge.net/

Blender instructions:
https://www.youtube.com/playlist?list=PLda3VoSoc_TR7X7wfblBGiRz-bvhKpGkS

Concurrency Cost Hierarchy:
https://travisdowns.github.io/blog/2020/07/06/concurrency-costs.html

Space partitioning:
http://tulrich.com/geekstuff/partitioning.html

Octree instructions:
http://www.gamedev.net/page/resources/_/technical/game-programming/introduction-to-octrees-r3529
https://research.nvidia.com/publication/efficient-sparse-voxel-octrees
https://research.nvidia.com/sites/default/files/pubs/2012-06_Maximizing-Parallelism-in/karras2012hpg_paper.pdf

A Real-Time Procedural Universe, Part Three: Matters of Scale:
http://www.gamasutra.com/view/feature/2984/a_realtime_procedural_universe_.php

Large Coordinate Systems:
https://www.gamedev.net/forums/topic/268861-large-coordinate-systems/

Theta*: Any-Angle Path Planning for Smoother Trajectories in Continuous Environments
http://aigamedev.com/open/tutorials/theta-star-any-angle-paths/

Pathfinding in 3D space - A*, Theta*, lazy Theta* in octree structure:
https://ascane.github.io/assets/portfolio/pathfinding3d-report.pdf

GPU Gems:
http://http.developer.nvidia.com/GPUGems/gpugems_pref01.html

GPGPU::Basic Math Tutorial:
http://www.mathematik.uni-dortmund.de/~goeddeke/gpgpu/tutorial.html

3D game graphics examples:
Far Cry 4:
http://far-cry.ubi.com/en-GB/media/index.aspx

The Elder Scrolls V - Skyrim:
http://www.elderscrolls.com/skyrim/media/

RockThe3D Free 3D Collections:
http://www.rockthe3d.com/category/models/

85 Free 3D Rigged Beautiful Girl Models:
http://www.rockthe3d.com/free-3d-rigged-beautiful-girl-models/

Git Large File Storage:
https://git-lfs.github.com/

Good free music (free as beer and free as speech), check the license of each file:
https://freesound.org/

About frustum culling and occlusion culling:
https://www.mpc-rnd.com/unity-gpu-culling-experiments/?t=unity
https://www.mpc-rnd.com/unity-gpu-culling-experiments-part2-optimizations/?t=unity

About setting up Bullet:
https://github.com/asc-community/MxEngine/blob/master/articles/bullet3_integration.md

About frustum culling using Bullet:
https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7575
https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7764

About categories and how to implement logging, exceptions and continuations:
https://www.youtube.com/watch?v=eCUfzvz7Z20

About Entity-Component System (ECS):
https://www.gamedev.net/articles/programming/general-and-gameplay-programming/the-entity-component-system-c-game-design-pattern-part-1-r4803/

About software synthesis:
https://www.basicsynth.com/

About ray tracing:
https://raytracing.github.io/books/RayTracingInOneWeekend.html

About iterators:
https://www.fluentcpp.com/2018/05/08/std-iterator-deprecated/
https://stackoverflow.com/questions/3582608/how-to-correctly-implement-custom-iterators-and-const-iterators/22801650#22801650

Study Finite Element Method (FEM) for water, snow, and ice simulations.
Grid-based approach.
Boundary-element method.
Hydrostatics for water.

Terrain rendering in Far Cry 5:
https://www.gdcvault.com/play/1025261/Terrain-Rendering-in-Far-Cry

Intel graphics research samples library:
https://www.intel.com/content/www/us/en/developer/topic-technology/graphics-research/samples.html

HipremeEngine
(Can be useful for OpenGL 3.3 -> DirectX 11 port)
https://github.com/MrcSnm/HipremeEngine

Erin Catto/Blizzard Entertainment: Understanding Constraints
https://www.gdcvault.com/play/1020603/Physics-for-Game-Programmers-Understanding

Gaffer on Games: Fix Your Timestep!
https://gafferongames.com/post/fix_your_timestep/

DNEG: Gravitational Lensing by Spinning Black Holes
https://www.dneg.com/black-holes/
https://iopscience.iop.org/article/10.1088/0264-9381/32/6/065001
https://iopscience.iop.org/article/10.1088/0264-9381/32/6/065001/pdf

Parallelizing the Naughty Dog engine using fibers
https://www.youtube.com/watch?v=HIVBhKj7gQU

deWiTTERS Game Loop
https://dewitters.com/dewitters-gameloop/

Fix Your Timestep!
https://gafferongames.com/post/fix_your_timestep/
